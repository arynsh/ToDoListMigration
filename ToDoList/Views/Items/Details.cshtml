@{
  Layout = "_Layout";
}

@model ToDoList.Models.Item

<h2>Item Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)</h3>
<hr/>
<h3>@Html.DisplayNameFor(model => model.DueDate): @Html.DisplayFor(model => model.DueDate)</h3>

@if(@Model.Categories.Count == 0)
{
  <p>This item does not belong to any categories</p>
}
else
{
  <h4>Categories the item belongs to:</h4>
  <ul>
    @foreach(var join in Model.Categories)
    {
      <li>@join.Category.Name</li>
      @using (Html.BeginForm("DeleteCategory", "Items"))
      {
        @Html.Hidden("joinId", @join.CategoryItemId)
        <input type="submit" value="delete" class="Btn btn-danger" />
      }
    }
  </ul>
}
<hr/>
@if (!Model.Completed)
{
  <h3>Mark the item as completed?</h3>
  @using (Html.BeginForm("MarkAsCompleted", "Items"))
    {
      @Html.Hidden("id", @Model.ItemId)
      <input type="submit" value="Mark as completed" class="btn btn-primary" />
    }
}
else
{
  <h3>Mark the item as uncompleted?</h3>
  @using (Html.BeginForm("MarkAsUnCompleted", "Items"))
    {
      @Html.Hidden("id", @Model.ItemId)
      <input type="submit" value="Mark as uncompleted" class="btn btn-primary" />
    }
}

<hr/>
<p>@Html.ActionLink("Edit Item", "Edit", new {id = Model.ItemId} )</p>
<p>@Html.ActionLink("Delete Item", "Delete", new {id = Model.ItemId})</p>
<p>@Html.ActionLink("Add a Category", "AddCategory", new { id = Model.ItemId })</p>
<p>@Html.ActionLink("Back to list", "Index")</p>